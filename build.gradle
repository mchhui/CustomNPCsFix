buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "B1.2.2-1.12.2"
group = "mchhui.customnpcsfix." // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CustomNPCsFix"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile files ("lib/CustomNPCs_1.12.2-30May19snapshot-deobf.jar")
    compile files ("lib/Spigot-1.12.2-forge.jar")
    compile files ("lib/[时装工坊]1.12.2-0.49.1-deobf.jar")
    compile files ("lib/Xaeros_Minimap_20.6.0_Forge_1.12-deobf.jar")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
        
    from(sourceSets.main.java.srcDirs) {
        exclude '.'
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '.'
    }
}

tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
}

jar {
    manifest {
//实现了IFMLLoadingPlugin的类（你的coremod类）
        attributes 'FMLCorePlugin': 'mchhui.customnpcsfix.coremod.CustomNPCFixPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
//access transformer配置文件，一般是modid_at.cfg，放在resources/META_INF文件夹下
//https://github.com/Ipsis/Woot/blob/1_12/src/main/resources/META-INF/woot_at.cfg（woot的AT配置文件）
    }
}