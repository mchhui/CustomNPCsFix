buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "B1.2.2.1-1.7.10"
group= "mchhui.customnpcsfix" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CustomNPCsFix"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile files ("lib/npc-deobf.jar")
    compile files ("lib/NBTJson.jar-def.jar")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
        
    from(sourceSets.main.java.srcDirs) {
        exclude '.'
    }
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
}

jar {
    manifest {
//实现了IFMLLoadingPlugin的类（你的coremod类）
        attributes 'FMLCorePlugin': 'mchhui.customnpcsfix.coremod.CustomNPCFixPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
//access transformer配置文件，一般是modid_at.cfg，放在resources/META_INF文件夹下
//https://github.com/Ipsis/Woot/blob/1_12/src/main/resources/META-INF/woot_at.cfg（woot的AT配置文件）
    }
}